# syntax = docker/dockerfile:1.5
FROM python:3.11 as requirements-stage

WORKDIR /tmp

RUN  --mount=type=cache,target=/root/.cache \
     pip install poetry==1.5.1

COPY ./pyproject.toml ./poetry.lock* /tmp/

RUN poetry export -f requirements.txt --output requirements.txt --without-hashes


FROM python:3.11 as builder

COPY --from=requirements-stage /tmp/requirements.txt /app/requirements.txt

RUN --mount=type=cache,target=/root/.cache \
    pip install --no-cache-dir --upgrade -r /app/requirements.txt

RUN apt-get update && \
    apt-get install -y wget tar && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

ENV DOCKERIZE_VERSION v0.6.1
RUN wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
    && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
    && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz

FROM python:3.11-slim-bookworm

ENV USER_NAME=docker_user

RUN useradd --create-home ${USER_NAME}

COPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

USER docker_user
RUN mkdir /home/${USER_NAME}/app
WORKDIR /home/${USER_NAME}

ENV PYTHONUNBUFFERED=1
ENV ENV=dev
ENV PYTHONPATH=/home/${USER_NAME}/app

COPY --chown=${USER_NAME} /docker /home/${USER_NAME}/docker
RUN chmod +x /home/${USER_NAME}/docker/api/startup.dev.sh

COPY ./alembic.ini /home/${USER_NAME}/alembic.ini
# COPY migrations /home/${USER_NAME}/migrations
# COPY src /home/${USER_NAME}/app

ENTRYPOINT /home/$USER_NAME/docker/api/startup.dev.sh
